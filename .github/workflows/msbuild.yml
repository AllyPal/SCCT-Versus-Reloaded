# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: "SCCT_Versus_Reloaded.sln"

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Download d3d8.dll
      run: |
        curl -L -o d3d8.dll https://github.com/crosire/d3d8to9/releases/download/v1.12.0/d3d8.dll
        
    - name: Verify d3d8.dll hash
      run: |
        expected_hash="1E0096ED7A5C8E19F7840CC8117BC40899300632DA077CE66F74EBCD250A5038"
        actual_hash=$(sha256sum d3d8.dll | awk '{print $1}')
        
        echo "Expected hash: $expected_hash"
        echo "Actual hash: $actual_hash"
        
        if [ "$actual_hash" != "$expected_hash" ]; then
          echo "Hash mismatch! Downloaded file is incorrect."
          exit 1
        else
          echo "Hash verified. File is correct."
        fi

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    
    - uses: actions/upload-artifact@v4
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: Beta
    
        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: |
          Release/
          !Release/*.pdb
    
        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #   warn: Output a warning but do not fail the action
        #   error: Fail the action with an error message
        #   ignore: Do not output any warnings or errors, the action does not fail
        # Optional. Default is 'warn'
        if-no-files-found: error
    
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day.
        # Maximum 90 days unless changed from the repository settings page.
        # Optional. Defaults to repository settings.
        retention-days: 7
    
        # The level of compression for Zlib to be applied to the artifact archive.
        # The value can range from 0 to 9.
        # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        # Optional. Default is '6'
        # compression-level:
    
        # If true, an artifact with a matching name will be deleted before a new one is uploaded.
        # If false, the action will fail if an artifact for the given name already exists.
        # Does not fail if the artifact does not exist.
        # Optional. Default is 'false'
        #overwrite:
